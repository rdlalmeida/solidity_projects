{
  "contractName": "IERC4907",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "UpdateUser",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "setUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "userOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "userExpires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expires\",\"type\":\"uint64\"}],\"name\":\"UpdateUser\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expires\",\"type\":\"uint64\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"userExpires\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"userOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setUser(uint256,address,uint64)\":{\"details\":\"The zero address indicates there is no user Throws if `tokenId` is not a valid NFT\",\"params\":{\"expires\":\"UNIX timestamp, the new user could use the NFT before expires\",\"user\":\"The new user of the NFT\"}},\"userExpires(uint256)\":{\"details\":\"The zero value indicates that there is no user\",\"params\":{\"tokenId\":\"The NFT to get the user expires for\"},\"returns\":{\"_0\":\"uint256 The user expires for this NFT\"}},\"userOf(uint256)\":{\"details\":\"The zero address indicates that there is no user or the user is expired\",\"params\":{\"tokenId\":\"The NFT to get the user address for\"},\"returns\":{\"_0\":\"address The user address for this NFT\"}}},\"version\":1},\"userdoc\":{\"events\":{\"UpdateUser(uint256,address,uint64)\":{\"notice\":\"Emitted when the `user` of a NFT or the `expires` of the `user` is changed The zero address for user indicates that there is no user address\"}},\"kind\":\"user\",\"methods\":{\"setUser(uint256,address,uint64)\":{\"notice\":\"set the user and expires of a NFT\"},\"userExpires(uint256)\":{\"notice\":\"Get the user expires of a NFT\"},\"userOf(uint256)\":{\"notice\":\"Get the user address of a NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IERC4907.sol\":\"IERC4907\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IERC4907.sol\":{\"keccak256\":\"0xa335d7f2670576f9d9ca978e34e51b2c006982a109c3b7ed5d122144c2f1ba1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://142bfae84657a97c8221d22e2aaa32e6dca6dbd9ae8a176acf68130b61530160\",\"dweb:/ipfs/QmeeEtfsqkCZDnmLV6sVK9zoPgPLzX9kxDn7X44vB7bZgW\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ninterface IERC4907 {\n    // Logged when the user of a NFT is changed or expires is changed\n    /// @notice Emitted when the `user` of a NFT or the `expires` of the `user` is changed\n    /// The zero address for user indicates that there is no user address\n    event UpdateUser(\n        uint256 indexed tokenId,\n        address indexed user,\n        uint64 expires\n    );\n\n    /// @notice set the user and expires of a NFT\n    /// @dev The zero address indicates there is no user\n    /// Throws if `tokenId` is not a valid NFT\n    /// @param user The new user of the NFT\n    /// @param expires UNIX timestamp, the new user could use the NFT before expires\n    function setUser(uint256 tokenId, address user, uint64 expires) external;\n\n    /// @notice Get the user address of a NFT\n    /// @dev The zero address indicates that there is no user or the user is expired\n    /// @param tokenId The NFT to get the user address for\n    /// @return address The user address for this NFT\n    function userOf(uint256 tokenId) external view returns (address);\n\n    /// @notice Get the user expires of a NFT\n    /// @dev The zero value indicates that there is no user\n    /// @param tokenId The NFT to get the user expires for\n    /// @return uint256 The user expires for this NFT\n    function userExpires(uint256 tokenId) external view returns (uint256);\n}\n",
  "sourcePath": "/home/ricardoalmeida/Solidity_projects/solidity_projects/9_rentable-nft/contracts/IERC4907.sol",
  "ast": {
    "absolutePath": "project:/contracts/IERC4907.sol",
    "exportedSymbols": {
      "IERC4907": [
        3218
      ]
    },
    "id": 3219,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3182,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:16"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC4907",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3218,
        "linearizedBaseContracts": [
          3218
        ],
        "name": "IERC4907",
        "nameLocation": "76:8:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3183,
              "nodeType": "StructuredDocumentation",
              "src": "161:160:16",
              "text": "@notice Emitted when the `user` of a NFT or the `expires` of the `user` is changed\n The zero address for user indicates that there is no user address"
            },
            "eventSelector": "4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe",
            "id": 3191,
            "name": "UpdateUser",
            "nameLocation": "332:10:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "368:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "352:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "401:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "385:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "expires",
                  "nameLocation": "422:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "415:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3188,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "342:93:16"
            },
            "src": "326:110:16"
          },
          {
            "documentation": {
              "id": 3192,
              "nodeType": "StructuredDocumentation",
              "src": "442:278:16",
              "text": "@notice set the user and expires of a NFT\n @dev The zero address indicates there is no user\n Throws if `tokenId` is not a valid NFT\n @param user The new user of the NFT\n @param expires UNIX timestamp, the new user could use the NFT before expires"
            },
            "functionSelector": "e030565e",
            "id": 3201,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nameLocation": "734:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "750:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3201,
                  "src": "742:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3196,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "767:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3201,
                  "src": "759:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "expires",
                  "nameLocation": "780:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3201,
                  "src": "773:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:47:16"
            },
            "returnParameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:16"
            },
            "scope": 3218,
            "src": "725:73:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3202,
              "nodeType": "StructuredDocumentation",
              "src": "804:239:16",
              "text": "@notice Get the user address of a NFT\n @dev The zero address indicates that there is no user or the user is expired\n @param tokenId The NFT to get the user address for\n @return address The user address for this NFT"
            },
            "functionSelector": "c2f1f14a",
            "id": 3209,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userOf",
            "nameLocation": "1057:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3204,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1072:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "1064:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1063:17:16"
            },
            "returnParameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "1104:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:9:16"
            },
            "scope": 3218,
            "src": "1048:65:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3210,
              "nodeType": "StructuredDocumentation",
              "src": "1119:214:16",
              "text": "@notice Get the user expires of a NFT\n @dev The zero value indicates that there is no user\n @param tokenId The NFT to get the user expires for\n @return uint256 The user expires for this NFT"
            },
            "functionSelector": "8fc88c48",
            "id": 3217,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userExpires",
            "nameLocation": "1347:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3212,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1367:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3217,
                  "src": "1359:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:17:16"
            },
            "returnParameters": {
              "id": 3216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3217,
                  "src": "1399:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:9:16"
            },
            "scope": 3218,
            "src": "1338:70:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3219,
        "src": "66:1344:16",
        "usedErrors": [],
        "usedEvents": [
          3191
        ]
      }
    ],
    "src": "32:1379:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-19T20:55:21.944Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "setUser(uint256,address,uint64)": {
        "details": "The zero address indicates there is no user Throws if `tokenId` is not a valid NFT",
        "params": {
          "expires": "UNIX timestamp, the new user could use the NFT before expires",
          "user": "The new user of the NFT"
        }
      },
      "userExpires(uint256)": {
        "details": "The zero value indicates that there is no user",
        "params": {
          "tokenId": "The NFT to get the user expires for"
        },
        "returns": {
          "_0": "uint256 The user expires for this NFT"
        }
      },
      "userOf(uint256)": {
        "details": "The zero address indicates that there is no user or the user is expired",
        "params": {
          "tokenId": "The NFT to get the user address for"
        },
        "returns": {
          "_0": "address The user address for this NFT"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "UpdateUser(uint256,address,uint64)": {
        "notice": "Emitted when the `user` of a NFT or the `expires` of the `user` is changed The zero address for user indicates that there is no user address"
      }
    },
    "kind": "user",
    "methods": {
      "setUser(uint256,address,uint64)": {
        "notice": "set the user and expires of a NFT"
      },
      "userExpires(uint256)": {
        "notice": "Get the user expires of a NFT"
      },
      "userOf(uint256)": {
        "notice": "Get the user address of a NFT"
      }
    },
    "version": 1
  }
}